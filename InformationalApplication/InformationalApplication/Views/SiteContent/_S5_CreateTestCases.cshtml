<div class="subbody-one">

    <h2><b>Стъпка 5 – Създаване на случаи за тестване. </b></h2>
    <p>Определянето на натоварването и ключовите сценарии не винаги осигурява цялата информация нужна ни за да имплементираме и създадем тестовите случаи. Допълнителни входни данни за цялостно създаване на стрес-тест включват цели за производителност, характеристики за натовареност, тестова информация, тестова среда и определени показатели. Всеки дизайн за тест би трябвало да съдържа очакваните резултати и/или ключовата информация, която да се вземе от него, по такъв начин че всеки сценарий на тест да може да се отбележи като успешен, неуспешен или неопределен след тестване.</p>
    <p>Следното е пример на сценарий за тестване базиран на сценарий за даване на поръчка.</p>
    <h2><b>Тест 1 – Сценарий за даване на поръчка</b></h2>
    <ul>
        <li><b>Натовареност: </b>1000 потребителя по едно и също време.</li>
        <li><b>Време за изпълнение(Think time): </b>Използва се произволно време между 1 и 10 секунди в тестовия скрипт след всяка операция.</li>
        <li><b>Продължителност на теста: </b>Направи теста за два дни.</li>
    </ul>
    <h2><b>Очаквани резултати:</b></h2>
    <ul>
        <li>Процеса на хостване при приложенията не би трябвало да рециклира ресурси заради затруднения или изхабяване на памет.</li>
        <li>Пропусквателността не трябва да пада под 35 заявки за секунда.</li>
        <li>Времето за отговор не трябва да е повече от 7 секунди да 95 процента от всички завършени транзакции.</li>
        <li>Грешките от тип „Зает сървър“ не трябва да са повече от 10 процента от всички отговори.</li>
        <li>Транзакциите за покупки не бива да се провалят по време на изпълнение на тестовете. Входните данни на базата данни трябва да отговарят по бройка на „Успелите транзакции“.</li>
    </ul>
    @Html.ActionLink("Начало", "Index", "Home")


</div>
